# 문제
엘리베이터 제어 시스템을 도입하려는 3개의 건물이 있으며 각각 조건이 다르다.

## 공통 사항  
- 사용할 엘리베이터의 수를 1대에서 4대까지 선택할 수 있다.
- 건물의 가장 낮은 층은 항상 1층이다.
- Call 목록은 건물 마다 다르게 주어진다.
- 유효하지 않은 Call은 없다.(존재하지 않는 층으로의 이동, 같은 층으로의 이동 등등)
- Token의 유효시간인 10분 안에 모든 Call을 처리하지 못하면 점수를 받을 수 없다.

## 주의 사항
- 구현에 들어가기 전에 모든 문제를 꼼꼼히 읽고 설계를 진행해야 한다.
- 엘리베이터 N대(최대 4대)를 제어하는 경우로의 확장성을 염두에 두고 설계 및 구현해야 한다.

## 문제0. 어피치 맨션 (problem_id = 0)

출근을 위해 집을 나선 라이언.
라이언이 살고있는 어피치 맨션은 총 5층 높이의 작은 맨션이다.
이동이 많지 않은 기본적인 엘리베이터 동작을 구현하여 승객을 수송해보자!

조건
- 엘리베이터의 최대 수용인원(=Call) : 8명
- 건물의 최고층 : 5층
- Call 수 : 6개

## 문제1. 제이지 빌딩 (problem_id = 1)

라이언의 사무실이 있는 제이지 빌딩으로 출근을 완료한 라이언.
사업이 성장하며 사무실을 공격적으로 늘린 결과, 제이지 빌딩 내 모든 층에 라이언의 사무실이 자리잡고 있다. 
직원들이 타 팀과 협업을 위해 층간 이동을 하다보니 오늘도 엘리베이터는 매우 혼잡하다.

모든 직원의 층간 이동을 빠르게 완료할 수 있는 엘리베이터 알고리즘을 만들어보자! 

조건
- 엘리베이터의 최대 수용인원(=Call) : 8명
- 건물의 최고층 : 25층
- Call 수 : 200개

## 문제2. 라이언 타워 (problem_id = 2)

라이언 인형의 대박으로 큰 돈을 번 라전무.
평소 건물주가 꿈이던 라전무는 그 동안 번 돈을 모두 투자하여 카카오가 입주해있던 건물을 매입하였다.
라이언 타워는 25층으로 13층부터 25층은 카카오가 사용하고, 2층부터 12층은 각 층마다 다른 회사에 임대를 주었다.

그러던 어느 날, 최대 고객인 카카오 임직원들로부터 엘리베이터 대기 시간이 너무 길다는 불만을 접수한 라이언.
엘리베이터 사용 패턴을 분석해보니 다음과 같은 특징을 발견하였다.
- 13층에 있는 카카오 프렌즈샵을 방문하고 돌아가는 고객들의 비중이 높다.
- 카카오의 경우 여러 층을 이용하고 있으므로 층간 이동이 있는 반면, 나머지 회사들 간에는 층간 이동이 거의 없다.

위를 기반으로 효율적인 엘리베이터 배치 알고리즘을 개발하여 카카오 크루들을 기쁘게 해주자!

조건
- 엘리베이터의 최대 수용인원(=Call) : 8명
- 건물의 최고층 : 25층
- Call 수 : 500개
- 출입구 : 1층


# 평가

문제 | 배점 | 기본 점수
:-: | :-: | :-----:
0번 | 10 | 10
1번 | 50 | 10
2번 | 50 | 20

- 각 문제 별로 모든 `Call`을 처리하면 기본 점수를 받는다.
- 각 문제 별로 모든 `Call`을 처리한 `timestamp`가 작은 순서대로 지원자 간의 순위가 결정되며,
  순위를 바탕으로 기본 점수 외의 나머지 점수가 결정된다. 
